import{_ as s,c as n,o as a,a as l}from"./app.9e1597b0.js";const C=JSON.parse('{"title":"通用 API","description":"","frontmatter":{},"headers":[{"level":2,"title":"nextTick()","slug":"nexttick","link":"#nexttick","children":[]}],"relativePath":"frontend/vue/api/general.md","lastUpdated":1672818356000}'),p={name:"frontend/vue/api/general.md"},e=l(`<h1 id="通用-api" tabindex="-1">通用 API <a class="header-anchor" href="#通用-api" aria-hidden="true">#</a></h1><h2 id="nexttick" tabindex="-1">nextTick() <a class="header-anchor" href="#nexttick" aria-hidden="true">#</a></h2><blockquote><p>等待下一次 DOM 更新的工具方法。</p></blockquote><ul><li>类型</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">nextTick</span><span style="color:#C9D1D9;">(</span><span style="color:#D2A8FF;">callback</span><span style="color:#FF7B72;">?:</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">void</span><span style="color:#C9D1D9;">)</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Promise</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#79C0FF;">void</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>详细信息</p><p>在 Vue 中更改响应式状态时，最终的 DOM 更新并不是同步生效的，而是由 Vue 将它们缓存在一个队列中，直到下一个 “tick” 才一起执行。这样是为了确保每个组件无论发生多少状态改变，都仅执行一次更新。</p><p><code>nextTick()</code>可以在状态改变后调用，用来等待 DOM 更新完成。可以传递一个回调函数在 DOM 更新后执行，或者 await 返回的 Promise。</p></li><li><p>示例</p></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">setup</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">lang</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;ts&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { nextTick, ref } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">count</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ref</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  count.value</span><span style="color:#FF7B72;">++</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// DOM 还未更新</span></span>
<span class="line"><span style="color:#C9D1D9;">  console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(document.</span><span style="color:#D2A8FF;">getElementById</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;counter&#39;</span><span style="color:#C9D1D9;">).textContent) </span><span style="color:#8B949E;">// 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">nextTick</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// DOM 此时已经更新</span></span>
<span class="line"><span style="color:#C9D1D9;">  console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(document.</span><span style="color:#D2A8FF;">getElementById</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;counter&#39;</span><span style="color:#C9D1D9;">).textContent) </span><span style="color:#8B949E;">// 1</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;counter&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">@click</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;increment&quot;</span><span style="color:#C9D1D9;">&gt;{{ count }}&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,7),o=[e];function t(c,r,D,i,y,F){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{C as __pageData,b as default};
