import{_ as s,c as n,o as a,a as l}from"./app.06f43a61.js";const C=JSON.parse('{"title":"SpringSecurity 从入门到精通","description":"","frontmatter":{},"headers":[{"level":2,"title":"课程介绍","slug":"课程介绍","link":"#课程介绍","children":[]},{"level":2,"title":"0.简介","slug":"_0-简介","link":"#_0-简介","children":[]},{"level":2,"title":"1. 快速入门","slug":"_1-快速入门","link":"#_1-快速入门","children":[{"level":3,"title":"1.1 准备工作","slug":"_1-1-准备工作","link":"#_1-1-准备工作","children":[]},{"level":3,"title":"1.2 引入 SpringSecurity","slug":"_1-2-引入-springsecurity","link":"#_1-2-引入-springsecurity","children":[]}]},{"level":2,"title":"2. 认证","slug":"_2-认证","link":"#_2-认证","children":[{"level":3,"title":"2.1 登录校验流程","slug":"_2-1-登录校验流程","link":"#_2-1-登录校验流程","children":[]},{"level":3,"title":"2.2 原理初探","slug":"_2-2-原理初探","link":"#_2-2-原理初探","children":[]},{"level":3,"title":"2.3 解决问题","slug":"_2-3-解决问题","link":"#_2-3-解决问题","children":[]}]},{"level":2,"title":"3.授权","slug":"_3-授权","link":"#_3-授权","children":[{"level":3,"title":"3.0 权限系统的使用","slug":"_3-0-权限系统的使用","link":"#_3-0-权限系统的使用","children":[]},{"level":3,"title":"3.1 授权基本流程","slug":"_3-1-授权基本流程","link":"#_3-1-授权基本流程","children":[]},{"level":3,"title":"3.2 授权实现","slug":"_3-2-授权实现","link":"#_3-2-授权实现","children":[]}]},{"level":2,"title":"4. 自定义失败处理","slug":"_4-自定义失败处理","link":"#_4-自定义失败处理","children":[]},{"level":2,"title":"5.跨域","slug":"_5-跨域","link":"#_5-跨域","children":[]},{"level":2,"title":"6. 遗留小问题","slug":"_6-遗留小问题","link":"#_6-遗留小问题","children":[{"level":3,"title":"其它权限校验方法","slug":"其它权限校验方法","link":"#其它权限校验方法","children":[]},{"level":3,"title":"自定义权限校验方法","slug":"自定义权限校验方法","link":"#自定义权限校验方法","children":[]},{"level":3,"title":"基于配置权限控制","slug":"基于配置权限控制","link":"#基于配置权限控制","children":[]},{"level":3,"title":"CSRF","slug":"csrf","link":"#csrf","children":[]},{"level":3,"title":"认证成功处理器","slug":"认证成功处理器","link":"#认证成功处理器","children":[]},{"level":3,"title":"认证失败处理器","slug":"认证失败处理器","link":"#认证失败处理器","children":[]}]}],"relativePath":"java/springSecurity+jwt.md","lastUpdated":1672544047000}'),p={name:"java/springSecurity+jwt.md"},e=l(`<h1 id="springsecurity-从入门到精通" tabindex="-1">SpringSecurity 从入门到精通 <a class="header-anchor" href="#springsecurity-从入门到精通" aria-hidden="true">#</a></h1><h2 id="课程介绍" tabindex="-1">课程介绍 <a class="header-anchor" href="#课程介绍" aria-hidden="true">#</a></h2><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220705183403396.png" alt="image-20220705183403396"></p><h2 id="_0-简介" tabindex="-1">0.简介 <a class="header-anchor" href="#_0-简介" aria-hidden="true">#</a></h2><p>​ SpringSecurity 是 Spring 家族中的一个安全框架。相比于另外一个安全框架 Shiro，它提供了更丰富的功能，社区资源也比 Shiro 丰富。</p><p>​ 一般来说大型项目都是使用 SpringSecurity 来做安全框架。小项目有 Shiro 的比较多，因为相比于 SpringSecurity，Shiro 的上手更加简单。</p><p>​ 一般 Web 应用的需要进行认证和授权。</p><p>​ <strong>认证：验证当前访问系统的是不是本系统用户，并且要确认具体是哪个用户</strong></p><p>​ <strong>授权：经过认证后判断当前用户是否有权限进行某个操作</strong></p><p>而认证和授权也是 SpringSecurity 作为安全框架的核心功能。</p><h2 id="_1-快速入门" tabindex="-1">1. 快速入门 <a class="header-anchor" href="#_1-快速入门" aria-hidden="true">#</a></h2><h3 id="_1-1-准备工作" tabindex="-1">1.1 准备工作 <a class="header-anchor" href="#_1-1-准备工作" aria-hidden="true">#</a></h3><p>​ 我们先要搭建一个简单的 SpringBoot 工程</p><p>① 设置父工程 添加依赖</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">parent</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;org.springframework.boot&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;spring-boot-starter-parent&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;2.5.0&lt;/</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">parent</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependencies</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;org.springframework.boot&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;org.projectlombok&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;lombok&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">optional</span><span style="color:#C9D1D9;">&gt;true&lt;/</span><span style="color:#7EE787;">optional</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependencies</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>② 创建启动类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">SpringBootApplication</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityApplication</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">main</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">[] </span><span style="color:#FFA657;">args</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        SpringApplication.</span><span style="color:#D2A8FF;">run</span><span style="color:#C9D1D9;">(SecurityApplication.class,args);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>③ 创建 Controller</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.web.bind.annotation.RestController;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">RestController</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">HelloController</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">RequestMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/hello&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_1-2-引入-springsecurity" tabindex="-1">1.2 引入 SpringSecurity <a class="header-anchor" href="#_1-2-引入-springsecurity" aria-hidden="true">#</a></h3><p>​ 在 SpringBoot 项目中使用 SpringSecurity 我们只需要引入依赖即可实现入门案例。</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;org.springframework.boot&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;spring-boot-starter-security&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ 引入依赖后我们在尝试去访问之前的接口就会自动跳转到一个 SpringSecurity 的默认登陆页面，默认用户名是 user,密码会输出在控制台。</p><p>​ 必须登陆之后才能对接口进行访问。</p><h2 id="_2-认证" tabindex="-1">2. 认证 <a class="header-anchor" href="#_2-认证" aria-hidden="true">#</a></h2><h3 id="_2-1-登录校验流程" tabindex="-1">2.1 登录校验流程 <a class="header-anchor" href="#_2-1-登录校验流程" aria-hidden="true">#</a></h3><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220705220939727.png" alt="image-20220705220939727"></p><h3 id="_2-2-原理初探" tabindex="-1">2.2 原理初探 <a class="header-anchor" href="#_2-2-原理初探" aria-hidden="true">#</a></h3><p>​ 想要知道如何实现自己的登陆流程就必须要先知道入门案例中 SpringSecurity 的流程。</p><h4 id="_2-2-1-springsecurity-完整流程" tabindex="-1">2.2.1 SpringSecurity 完整流程 <a class="header-anchor" href="#_2-2-1-springsecurity-完整流程" aria-hidden="true">#</a></h4><p>​ SpringSecurity 的原理其实就是一个过滤器链，内部包含了提供各种功能的过滤器。</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220707201541944.png" alt="image-20220707201541944"></p><p>​ 图中只是展示了核心过滤器，其他的非核心过滤器并没有在图中展示。</p><p><strong>UsernamePasswordAuthenticationFilter</strong>:负责处理我们在登录页面填写了用户密码后的登陆请求。入门案例的认证工作主要由他负责。 <strong>ExceptionTranslationFilter</strong>:处理过滤器链中抛出的任何 AccessDeniedException 和 AuthenticationException.</p><p><strong>FilterSecurityInterceptor</strong>: 负责权限校验的过滤器。</p><p>​ 我们可以通过 Debug 查看当前系统中 SpringSecurity 过滤器链中有哪些过滤器及它们的顺序。</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220707201424807.png" alt="image-20220707201424807"></p><h4 id="_2-2-2-认证流程详解" tabindex="-1">2.2.2 认证流程详解 <a class="header-anchor" href="#_2-2-2-认证流程详解" aria-hidden="true">#</a></h4><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220707201508159.png" alt="image-20220707201508159"></p><p>概念速查：</p><p>Authentication 接口: 它的实现类，表示当前访问系统的用户，封装了用户相关信息。</p><p>AuthenticationManager 接口：定义了认证 Authentication 的方法</p><p>UserDetailsService 接口：加载用户特定数据的核心接口。里面定义了一个根据用户名查询用户信息的方法。</p><p>UserDetails 接口：提供核心用户信息。通过 UserDetailsService 根据用户名获取处理的用户信息要封装成 UserDetails 对象返回。然后将这些信息封装到 Authentication 对象中。</p><h3 id="_2-3-解决问题" tabindex="-1">2.3 解决问题 <a class="header-anchor" href="#_2-3-解决问题" aria-hidden="true">#</a></h3><h4 id="_2-3-1-思路分析" tabindex="-1">2.3.1 思路分析 <a class="header-anchor" href="#_2-3-1-思路分析" aria-hidden="true">#</a></h4><p>登录</p><p>​ ① 自定义登录接口</p><p>​ 调用 ProviderManager 的方法进行认证 如果认证通过生成 jwt</p><p>​ 把用户信息存入 Redis 中</p><p>​ ② 自定义 UserDetailsService</p><p>​ 在这个实现类中去查询数据库</p><p>校验</p><p>​ ① 定义 jwt 认证过滤器</p><p>​ 获取 token</p><p>​ 解析 token 获取其中的 userid</p><p>​ 从 Redis 中获取用户信息</p><p>​ 存入 SecurityContextHolder</p><h4 id="_2-3-2-准备工作" tabindex="-1">2.3.2 准备工作 <a class="header-anchor" href="#_2-3-2-准备工作" aria-hidden="true">#</a></h4><p>① 添加依赖</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!--redis依赖--&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;org.springframework.boot&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;spring-boot-starter-data-redis&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!--fastjson依赖--&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;com.alibaba&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;fastjson&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;1.2.33&lt;/</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">&lt;!--jwt依赖--&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;io.jsonwebtoken&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;jjwt&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;0.9.0&lt;/</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>② 添加 Redis 相关配置</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.alibaba.fastjson.JSON;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.alibaba.fastjson.serializer.SerializerFeature;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.fasterxml.jackson.databind.JavaType;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.fasterxml.jackson.databind.ObjectMapper;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.fasterxml.jackson.databind.type.TypeFactory;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.data.redis.serializer.RedisSerializer;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.data.redis.serializer.SerializationException;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.alibaba.fastjson.parser.ParserConfig;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.util.Assert;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.nio.charset.Charset;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * Redis使用FastJson序列化</span></span>
<span class="line"><span style="color:#8B949E;"> *</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@author</span><span style="color:#8B949E;"> sg</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">FastJsonRedisSerializer</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">RedisSerializer</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Charset</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">DEFAULT_CHARSET</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> Charset.</span><span style="color:#D2A8FF;">forName</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;UTF-8&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Class</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">clazz;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">static</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        ParserConfig.</span><span style="color:#D2A8FF;">getGlobalInstance</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">setAutoTypeSupport</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">FastJsonRedisSerializer</span><span style="color:#C9D1D9;">(Class&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">clazz</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">super</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.clazz </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> clazz;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">byte</span><span style="color:#C9D1D9;">[] </span><span style="color:#D2A8FF;">serialize</span><span style="color:#C9D1D9;">(T </span><span style="color:#FFA657;">t</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> SerializationException</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (t </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">byte</span><span style="color:#C9D1D9;">[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> JSON.</span><span style="color:#D2A8FF;">toJSONString</span><span style="color:#C9D1D9;">(t, SerializerFeature.WriteClassName).</span><span style="color:#D2A8FF;">getBytes</span><span style="color:#C9D1D9;">(DEFAULT_CHARSET);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> T </span><span style="color:#D2A8FF;">deserialize</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">byte</span><span style="color:#C9D1D9;">[] </span><span style="color:#FFA657;">bytes</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> SerializationException</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (bytes </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">||</span><span style="color:#C9D1D9;"> bytes.length </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">str</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">String</span><span style="color:#C9D1D9;">(bytes, DEFAULT_CHARSET);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> JSON.</span><span style="color:#D2A8FF;">parseObject</span><span style="color:#C9D1D9;">(str, clazz);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> JavaType </span><span style="color:#D2A8FF;">getJavaType</span><span style="color:#C9D1D9;">(Class&lt;</span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">clazz</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> TypeFactory.</span><span style="color:#D2A8FF;">defaultInstance</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">constructType</span><span style="color:#C9D1D9;">(clazz);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.context.annotation.Bean;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.context.annotation.Configuration;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.data.redis.connection.RedisConnectionFactory;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.data.redis.core.RedisTemplate;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.data.redis.serializer.StringRedisSerializer;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">RedisConfig</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">SuppressWarnings</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> { </span><span style="color:#A5D6FF;">&quot;unchecked&quot;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&quot;rawtypes&quot;</span><span style="color:#C9D1D9;"> })</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> RedisTemplate&lt;</span><span style="color:#FF7B72;">Object</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">Object</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">redisTemplate</span><span style="color:#C9D1D9;">(RedisConnectionFactory </span><span style="color:#FFA657;">connectionFactory</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        RedisTemplate</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">Object</span><span style="color:#FFA657;">, </span><span style="color:#FF7B72;">Object</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">template</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> RedisTemplate&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">setConnectionFactory</span><span style="color:#C9D1D9;">(connectionFactory);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        FastJsonRedisSerializer</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">serializer</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">FastJsonRedisSerializer</span><span style="color:#C9D1D9;">(Object.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 使用StringRedisSerializer来序列化和反序列化redis的key值</span></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">setKeySerializer</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">StringRedisSerializer</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">setValueSerializer</span><span style="color:#C9D1D9;">(serializer);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// Hash的key也采用StringRedisSerializer的序列化方式</span></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">setHashKeySerializer</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">StringRedisSerializer</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">setHashValueSerializer</span><span style="color:#C9D1D9;">(serializer);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        template.</span><span style="color:#D2A8FF;">afterPropertiesSet</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> template;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>③ 响应类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.fasterxml.jackson.annotation.JsonInclude;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * @Author 三更  B站： https://space.bilibili.com/663528522</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">JsonInclude</span><span style="color:#C9D1D9;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">ResponseResult</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; {</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 状态码</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Integer</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">code;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 提示信息，如果有错误时，前端可以获取该字段进行提示</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">msg;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 查询到的结果数据，</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> T</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(Integer </span><span style="color:#FFA657;">code</span><span style="color:#C9D1D9;">, String </span><span style="color:#FFA657;">msg</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.code </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> code;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.msg </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> msg;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(Integer </span><span style="color:#FFA657;">code</span><span style="color:#C9D1D9;">, T </span><span style="color:#FFA657;">data</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.code </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> code;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.data </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> data;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> Integer </span><span style="color:#D2A8FF;">getCode</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> code;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCode</span><span style="color:#C9D1D9;">(Integer </span><span style="color:#FFA657;">code</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.code </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> code;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getMsg</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> msg;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setMsg</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">msg</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.msg </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> msg;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> T </span><span style="color:#D2A8FF;">getData</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> data;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setData</span><span style="color:#C9D1D9;">(T </span><span style="color:#FFA657;">data</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.data </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> data;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(Integer </span><span style="color:#FFA657;">code</span><span style="color:#C9D1D9;">, String </span><span style="color:#FFA657;">msg</span><span style="color:#C9D1D9;">, T </span><span style="color:#FFA657;">data</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.code </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> code;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.msg </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> msg;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.data </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> data;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>④ 工具类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> io.jsonwebtoken.Claims;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> io.jsonwebtoken.JwtBuilder;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> io.jsonwebtoken.Jwts;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> io.jsonwebtoken.SignatureAlgorithm;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> javax.crypto.SecretKey;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> javax.crypto.spec.SecretKeySpec;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.Base64;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.Date;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.UUID;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * JWT工具类</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JwtUtil</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//有效期为</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">JWT_TTL</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#79C0FF;">1000L</span><span style="color:#C9D1D9;">;</span><span style="color:#8B949E;">// 60 * 60 *1000  一个小时</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//设置秘钥明文</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">JWT_KEY</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;sangeng&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getUUID</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">token</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> UUID.</span><span style="color:#D2A8FF;">randomUUID</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">toString</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">replaceAll</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;-&quot;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&quot;&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> token;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 生成jtw</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">subject</span><span style="color:#8B949E;"> token中要存放的数据（json格式）</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">createJWT</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">subject</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        JwtBuilder</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">builder</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">getJwtBuilder</span><span style="color:#C9D1D9;">(subject, </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">, </span><span style="color:#D2A8FF;">getUUID</span><span style="color:#C9D1D9;">());</span><span style="color:#8B949E;">// 设置过期时间</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> builder.</span><span style="color:#D2A8FF;">compact</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 生成jtw</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">subject</span><span style="color:#8B949E;"> token中要存放的数据（json格式）</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">ttlMillis</span><span style="color:#8B949E;"> token超时时间</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">createJWT</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">subject</span><span style="color:#C9D1D9;">, Long </span><span style="color:#FFA657;">ttlMillis</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        JwtBuilder</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">builder</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">getJwtBuilder</span><span style="color:#C9D1D9;">(subject, ttlMillis, </span><span style="color:#D2A8FF;">getUUID</span><span style="color:#C9D1D9;">());</span><span style="color:#8B949E;">// 设置过期时间</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> builder.</span><span style="color:#D2A8FF;">compact</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> JwtBuilder </span><span style="color:#D2A8FF;">getJwtBuilder</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">subject</span><span style="color:#C9D1D9;">, Long </span><span style="color:#FFA657;">ttlMillis</span><span style="color:#C9D1D9;">, String </span><span style="color:#FFA657;">uuid</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        SignatureAlgorithm</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">signatureAlgorithm</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> SignatureAlgorithm.HS256;</span></span>
<span class="line"><span style="color:#C9D1D9;">        SecretKey</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">secretKey</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">generalKey</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">nowMillis</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> System.</span><span style="color:#D2A8FF;">currentTimeMillis</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">now</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Date</span><span style="color:#C9D1D9;">(nowMillis);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(ttlMillis</span><span style="color:#FF7B72;">==</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">            ttlMillis</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">JwtUtil.JWT_TTL;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">expMillis</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> nowMillis </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> ttlMillis;</span></span>
<span class="line"><span style="color:#C9D1D9;">        Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">expDate</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Date</span><span style="color:#C9D1D9;">(expMillis);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> Jwts.</span><span style="color:#D2A8FF;">builder</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setId</span><span style="color:#C9D1D9;">(uuid)              </span><span style="color:#8B949E;">//唯一的ID</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setSubject</span><span style="color:#C9D1D9;">(subject)   </span><span style="color:#8B949E;">// 主题  可以是JSON数据</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setIssuer</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;sg&quot;</span><span style="color:#C9D1D9;">)     </span><span style="color:#8B949E;">// 签发者</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setIssuedAt</span><span style="color:#C9D1D9;">(now)      </span><span style="color:#8B949E;">// 签发时间</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">signWith</span><span style="color:#C9D1D9;">(signatureAlgorithm, secretKey) </span><span style="color:#8B949E;">//使用HS256对称加密算法签名, 第二个参数为秘钥</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setExpiration</span><span style="color:#C9D1D9;">(expDate);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 创建token</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">id</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">subject</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">ttlMillis</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">createJWT</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">id</span><span style="color:#C9D1D9;">, String </span><span style="color:#FFA657;">subject</span><span style="color:#C9D1D9;">, Long </span><span style="color:#FFA657;">ttlMillis</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        JwtBuilder</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">builder</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">getJwtBuilder</span><span style="color:#C9D1D9;">(subject, ttlMillis, id);</span><span style="color:#8B949E;">// 设置过期时间</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> builder.</span><span style="color:#D2A8FF;">compact</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">main</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">[] </span><span style="color:#FFA657;">args</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">token</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWM2ZDVhZi1mNjVlLTQ0MDAtYjcxMi0zYWEwOGIyOTIwYjQiLCJzdWIiOiJzZyIsImlzcyI6InNnIiwiaWF0IjoxNjM4MTA2NzEyLCJleHAiOjE2MzgxMTAzMTJ9.JVsSbkP94wuczb4QryQbAke3ysBDIL5ou8fWsbt_ebg&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        Claims</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">claims</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">parseJWT</span><span style="color:#C9D1D9;">(token);</span></span>
<span class="line"><span style="color:#C9D1D9;">        System.out.</span><span style="color:#D2A8FF;">println</span><span style="color:#C9D1D9;">(claims);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 生成加密后的秘钥 secretKey</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> SecretKey </span><span style="color:#D2A8FF;">generalKey</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">byte</span><span style="color:#FFA657;">[] </span><span style="color:#C9D1D9;">encodedKey</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> Base64.</span><span style="color:#D2A8FF;">getDecoder</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">decode</span><span style="color:#C9D1D9;">(JwtUtil.JWT_KEY);</span></span>
<span class="line"><span style="color:#C9D1D9;">        SecretKey</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">key</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">SecretKeySpec</span><span style="color:#C9D1D9;">(encodedKey, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, encodedKey.length, </span><span style="color:#A5D6FF;">&quot;AES&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> key;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 解析</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">jwt</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@throws</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">Exception</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> Claims </span><span style="color:#D2A8FF;">parseJWT</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">jwt</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        SecretKey</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">secretKey</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">generalKey</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> Jwts.</span><span style="color:#D2A8FF;">parser</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">setSigningKey</span><span style="color:#C9D1D9;">(secretKey)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">parseClaimsJws</span><span style="color:#C9D1D9;">(jwt)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">getBody</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.</span><span style="color:#79C0FF;">*</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.concurrent.TimeUnit;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">SuppressWarnings</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> { </span><span style="color:#A5D6FF;">&quot;unchecked&quot;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&quot;rawtypes&quot;</span><span style="color:#C9D1D9;"> })</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">RedisCache</span></span>
<span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> RedisTemplate</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">redisTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 缓存基本的对象，Integer、String、实体类等</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存的键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">value</span><span style="color:#8B949E;"> 缓存的值</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCacheObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> T </span><span style="color:#FFA657;">value</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisTemplate.</span><span style="color:#D2A8FF;">opsForValue</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">set</span><span style="color:#C9D1D9;">(key, value);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 缓存基本的对象，Integer、String、实体类等</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存的键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">value</span><span style="color:#8B949E;"> 缓存的值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">timeout</span><span style="color:#8B949E;"> 时间</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">timeUnit</span><span style="color:#8B949E;"> 时间颗粒度</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCacheObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> T </span><span style="color:#FFA657;">value</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Integer </span><span style="color:#FFA657;">timeout</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> TimeUnit </span><span style="color:#FFA657;">timeUnit</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisTemplate.</span><span style="color:#D2A8FF;">opsForValue</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">set</span><span style="color:#C9D1D9;">(key, value, timeout, timeUnit);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 设置有效时间</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> Redis键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">timeout</span><span style="color:#8B949E;"> 超时时间</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> true=设置成功；false=设置失败</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">expire</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">long</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">timeout</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">expire</span><span style="color:#C9D1D9;">(key, timeout, TimeUnit.SECONDS);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 设置有效时间</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> Redis键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">timeout</span><span style="color:#8B949E;"> 超时时间</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">unit</span><span style="color:#8B949E;"> 时间单位</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> true=设置成功；false=设置失败</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">expire</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">long</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">timeout</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> TimeUnit </span><span style="color:#FFA657;">unit</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">expire</span><span style="color:#C9D1D9;">(key, timeout, unit);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获得缓存的基本对象。</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> 缓存键值对应的数据</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; T </span><span style="color:#D2A8FF;">getCacheObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        ValueOperations</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">, </span><span style="color:#FF7B72;">T</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">operation</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForValue</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> operation.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(key);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 删除单个对象</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">deleteObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">delete</span><span style="color:#C9D1D9;">(key);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 删除集合对象</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">collection</span><span style="color:#8B949E;"> 多个对象</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">long</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">deleteObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Collection </span><span style="color:#FFA657;">collection</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">delete</span><span style="color:#C9D1D9;">(collection);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 缓存List数据</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存的键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">dataList</span><span style="color:#8B949E;"> 待缓存的List数据</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> 缓存的对象</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">long</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCacheList</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> List&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">dataList</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">count</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForList</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">rightPushAll</span><span style="color:#C9D1D9;">(key, dataList);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> count </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> count;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获得缓存的list对象</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存的键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> 缓存键值对应的数据</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; List&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getCacheList</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForList</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">range</span><span style="color:#C9D1D9;">(key, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 缓存Set</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> 缓存键值</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">dataSet</span><span style="color:#8B949E;"> 缓存的数据</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> 缓存数据的对象</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; BoundSetOperations&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">setCacheSet</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Set&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">dataSet</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        BoundSetOperations</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">, </span><span style="color:#FF7B72;">T</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">setOperation</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">boundSetOps</span><span style="color:#C9D1D9;">(key);</span></span>
<span class="line"><span style="color:#C9D1D9;">        Iterator</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">it</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> dataSet.</span><span style="color:#D2A8FF;">iterator</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;"> (it.</span><span style="color:#D2A8FF;">hasNext</span><span style="color:#C9D1D9;">())</span></span>
<span class="line"><span style="color:#C9D1D9;">        {</span></span>
<span class="line"><span style="color:#C9D1D9;">            setOperation.</span><span style="color:#D2A8FF;">add</span><span style="color:#C9D1D9;">(it.</span><span style="color:#D2A8FF;">next</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> setOperation;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获得缓存的set</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; Set&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getCacheSet</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForSet</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">members</span><span style="color:#C9D1D9;">(key);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 缓存Map</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">dataMap</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCacheMap</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Map&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">dataMap</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (dataMap </span><span style="color:#FF7B72;">!=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">putAll</span><span style="color:#C9D1D9;">(key, dataMap);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获得缓存的Map</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; Map&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getCacheMap</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">entries</span><span style="color:#C9D1D9;">(key);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 往Hash中存入数据</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> Redis键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">hKey</span><span style="color:#8B949E;"> Hash键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">value</span><span style="color:#8B949E;"> 值</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCacheMapValue</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">hKey</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> T </span><span style="color:#FFA657;">value</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">put</span><span style="color:#C9D1D9;">(key, hKey, value);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获取Hash中的数据</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> Redis键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">hKey</span><span style="color:#8B949E;"> Hash键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> Hash中的对象</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; T </span><span style="color:#D2A8FF;">getCacheMapValue</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">hKey</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        HashOperations</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">, </span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">, </span><span style="color:#FF7B72;">T</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">opsForHash</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> opsForHash.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(key, hKey);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 删除Hash中的数据</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">hkey</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">delCacheMapValue</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">hkey</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        HashOperations</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">hashOperations</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        hashOperations.</span><span style="color:#D2A8FF;">delete</span><span style="color:#C9D1D9;">(key, hkey);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获取多个Hash中的数据</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">key</span><span style="color:#8B949E;"> Redis键</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">hKeys</span><span style="color:#8B949E;"> Hash键集合</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> Hash对象集合</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; List&lt;</span><span style="color:#FF7B72;">T</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getMultiCacheMapValue</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">key</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> Collection&lt;</span><span style="color:#FF7B72;">Object</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">hKeys</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">opsForHash</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">multiGet</span><span style="color:#C9D1D9;">(key, hKeys);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 获得缓存的基本对象列表</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">pattern</span><span style="color:#8B949E;"> 字符串前缀</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> 对象列表</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> Collection&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">keys</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> String </span><span style="color:#FFA657;">pattern</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> redisTemplate.</span><span style="color:#D2A8FF;">keys</span><span style="color:#C9D1D9;">(pattern);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> javax.servlet.http.HttpServletResponse;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.io.IOException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">WebUtils</span></span>
<span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">     * 将字符串渲染到客户端</span></span>
<span class="line"><span style="color:#8B949E;">     *</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">response</span><span style="color:#8B949E;"> 渲染对象</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">string</span><span style="color:#8B949E;"> 待渲染的字符串</span></span>
<span class="line"><span style="color:#8B949E;">     * </span><span style="color:#FF7B72;">@return</span><span style="color:#8B949E;"> null</span></span>
<span class="line"><span style="color:#8B949E;">     */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">renderString</span><span style="color:#C9D1D9;">(HttpServletResponse </span><span style="color:#FFA657;">response</span><span style="color:#C9D1D9;">, String </span><span style="color:#FFA657;">string</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">try</span></span>
<span class="line"><span style="color:#C9D1D9;">        {</span></span>
<span class="line"><span style="color:#C9D1D9;">            response.</span><span style="color:#D2A8FF;">setStatus</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">            response.</span><span style="color:#D2A8FF;">setContentType</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;application/json&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">            response.</span><span style="color:#D2A8FF;">setCharacterEncoding</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;utf-8&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">            response.</span><span style="color:#D2A8FF;">getWriter</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">print</span><span style="color:#C9D1D9;">(string);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">catch</span><span style="color:#C9D1D9;"> (IOException </span><span style="color:#FFA657;">e</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        {</span></span>
<span class="line"><span style="color:#C9D1D9;">            e.</span><span style="color:#D2A8FF;">printStackTrace</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>⑤ 实体类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.io.Serializable;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.Date;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * 用户表(User)实体类</span></span>
<span class="line"><span style="color:#8B949E;"> *</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@author</span><span style="color:#8B949E;"> 三更</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Data</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">User</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Serializable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">serialVersionUID</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">40356785423868312L</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 主键</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">id;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 用户名</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userName;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 昵称</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">nickName;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 密码</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">password;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 账号状态（0正常 1停用）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">status;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 邮箱</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">email;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 手机号</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">phonenumber;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 用户性别（0男，1女，2未知）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">sex;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 头像</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">avatar;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 用户类型（0管理员，1普通用户）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userType;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 创建人的用户id</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">createBy;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 创建时间</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">createTime;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 更新人</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">updateBy;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 更新时间</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">updateTime;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 删除标志（0代表未删除，1代表已删除）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Integer</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">delFlag;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><h4 id="_2-3-3-实现" tabindex="-1">2.3.3 实现 <a class="header-anchor" href="#_2-3-3-实现" aria-hidden="true">#</a></h4><h5 id="_2-3-3-1-数据库校验用户" tabindex="-1">2.3.3.1 数据库校验用户 <a class="header-anchor" href="#_2-3-3-1-数据库校验用户" aria-hidden="true">#</a></h5><p>​ 从之前的分析我们可以知道，我们可以自定义一个 UserDetailsService,让 SpringSecurity 使用我们的 UserDetailsService。我们自己的 UserDetailsService 可以从数据库中查询用户名和密码。</p><h6 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-hidden="true">#</a></h6><p>​ 我们先创建一个用户表， 建表语句如下：</p><div class="language-sql line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_user</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">BIGINT</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT COMMENT </span><span style="color:#A5D6FF;">&#39;主键&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`user_name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户名&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`nick_name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;昵称&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`password\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;密码&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">CHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;账号状态（0正常 1停用）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`email\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;邮箱&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`phonenumber\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">32</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;手机号&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`sex\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">CHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户性别（0男，1女，2未知）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`avatar\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">VARCHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">128</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;头像&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`user_type\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">CHAR</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;1&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户类型（0管理员，1普通用户）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">BIGINT</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;创建人的用户id&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DATETIME</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;创建时间&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">BIGINT</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;更新人&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DATETIME</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;更新时间&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`del_flag\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">INT</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">11</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;删除标志（0代表未删除，1代表已删除）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">INNODB AUTO_INCREMENT</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4 COMMENT</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&#39;用户表&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>​ 引入 MybatisPuls 和 mysql 驱动的依赖</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;com.baomidou&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;mybatis-plus-boot-starter&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;3.4.3&lt;/</span><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;mysql&lt;/</span><span style="color:#7EE787;">groupId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;mysql-connector-java&lt;/</span><span style="color:#7EE787;">artifactId</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">dependency</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>​ 配置数据库信息</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#7EE787;">spring</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">datasource</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">url</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">jdbc:mysql://localhost:3306/dx_security?characterEncoding=utf-8&amp;serverTimezone=UTC</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">username</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">root</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">password</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">123456</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">driver-class-name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>定义 Mapper 接口</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">interface</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">UserMapper</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">BaseMapper</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FF7B72;">User</span><span style="color:#C9D1D9;">&gt; {</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>​ 修改 User 实体类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">类名上加@</span><span style="color:#FF7B72;">TableName</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;sys_user&quot;</span><span style="color:#C9D1D9;">) ,id字段上加 @</span><span style="color:#FF7B72;">TableId</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ 配置 Mapper 扫描</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">MapperScan</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;com.sangeng.mapper&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SimpleSecurityApplication</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">main</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">[] </span><span style="color:#FFA657;">args</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        ConfigurableApplicationContext</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">run</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> SpringApplication.</span><span style="color:#D2A8FF;">run</span><span style="color:#C9D1D9;">(SimpleSecurityApplication.class);</span></span>
<span class="line"><span style="color:#C9D1D9;">        System.out.</span><span style="color:#D2A8FF;">println</span><span style="color:#C9D1D9;">(run);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>​ 添加 junit 依赖</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">dependency</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">groupId</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">org.springframework.boot</span><span style="color:#FF7B72;">&lt;/</span><span style="color:#C9D1D9;">groupId</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">artifactId</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">spring</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">boot</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">starter</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">test</span><span style="color:#FF7B72;">&lt;/</span><span style="color:#C9D1D9;">artifactId</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">&lt;/</span><span style="color:#C9D1D9;">dependency</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ 测试 MP 是否能正常使用</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">SpringBootTest</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">MapperTest</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> UserMapper</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userMapper;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Test</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">testUserMapper</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">User</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">list</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> userMapper.</span><span style="color:#D2A8FF;">selectList</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        System.out.</span><span style="color:#D2A8FF;">println</span><span style="color:#C9D1D9;">(list);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h6 id="核心代码实现" tabindex="-1">核心代码实现 <a class="header-anchor" href="#核心代码实现" aria-hidden="true">#</a></h6><p>创建一个实现 UserDetailsService 的接口，重写其中方法。根据用户名从数据库中查询用户信息。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Service</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">UserDetailsServiceImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">UserDetailsService</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> UserMapper</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userMapper;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> UserDetails </span><span style="color:#D2A8FF;">loadUserByUsername</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">username</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> UsernameNotFoundException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//查询用户信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        LambdaQueryWrapper</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">User</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">queryWrapper</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> LambdaQueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        queryWrapper.</span><span style="color:#D2A8FF;">eq</span><span style="color:#C9D1D9;">(User</span><span style="color:#FF7B72;">::</span><span style="color:#C9D1D9;">getUserName,username);</span></span>
<span class="line"><span style="color:#C9D1D9;">        User</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">user</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> userMapper.</span><span style="color:#D2A8FF;">selectOne</span><span style="color:#C9D1D9;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果没有查询到用户，就抛出异常</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(user)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;用户名或密码错误。&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//Todo  查询对应的权限信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把数据封装成UserDetails返回</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">LoginUser</span><span style="color:#C9D1D9;">(user);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>因为 UserDetailsService 方法的返回值是 Userdetails 类型 ，所以需要定义一个类，实现该接口，把用户信息封装在其中。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Data</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">LoginUser</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">UserDetails</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> User</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">user;</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> Collection&lt;</span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">GrantedAuthority</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getAuthorities</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> user.</span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getUsername</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> user.</span><span style="color:#D2A8FF;">getUserName</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isAccountNonExpired</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isAccountNonLocked</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isCredentialsNonExpired</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isEnabled</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>注意：如果要测试，需要往用户表中写入用户数据，并且如果你想让用户的密码是明文存储，需要在密码前面加上{noop}。例如：</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220707215124039.png" alt="image-20220707215124039"></p><p>这样登录的时候就可以用 dunxi 作为用户名，1234 作为密码来登陆了。</p><h5 id="_2-3-3-2-密码加密存储" tabindex="-1">2.3.3.2 密码加密存储 <a class="header-anchor" href="#_2-3-3-2-密码加密存储" aria-hidden="true">#</a></h5><p>​ 实际项目中我们不会把密码明文存储在数据库中。</p><p>​ 默认使用 PasswordEncoder 要求数据库中的密码格式为：{id}password。它会根据 id 去判断密码的加密方式。但是我们一般不会采用这种方式。所以就需要替换 PasswordEncoder。</p><p>​ 我们一般使用 SpringSecurity 为我们提供的 BCryptPasswordEncoder。</p><p>​ 我们只需要把 BCryptPasswordEncoder 对象注入 Spring 容器中，SpringSecurity 就会使用该 PasswordEncoder 来进行密码校验。</p><p>​ 我们可以定义一个 SpringSecurity 的配置类，SpringSecurity 要求这个配置类要继承 WebSecurityConfigurerAdapter。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//创建BCryptPasswordEncoder注入容器</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> PasswordEncoder </span><span style="color:#D2A8FF;">passwordEncoder</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">BCryptPasswordEncoder</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="_2-3-3-3-登陆接口" tabindex="-1">2.3.3.3 登陆接口 <a class="header-anchor" href="#_2-3-3-3-登陆接口" aria-hidden="true">#</a></h5><p>​ 接下我们需要自定义登陆接口，然后让 SpringSecurity 对这个接口放行,让用户访问这个接口的时候不用登录也能访问。</p><p>​ 在接口中我们通过 AuthenticationManager 的 authenticate 方法来进行用户认证，所以需要在 SecurityConfig 中配置把 AuthenticationManager 注入容器。</p><p>​ 认证成功后的话要生成一个 jwt，放入响应中返回。并且为了让用户下回请求时能通过 jwt 识别出具体是哪个用户，我们需要把用户信息存入 redis，可以把 id 作为 key。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">RestController</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">LoginController</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> LoginService</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">loginService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PostMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/login&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> ResponseResult </span><span style="color:#D2A8FF;">login</span><span style="color:#C9D1D9;">(@</span><span style="color:#FF7B72;">RequestBody</span><span style="color:#C9D1D9;"> User </span><span style="color:#FFA657;">user</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//登录</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> loginService.</span><span style="color:#D2A8FF;">login</span><span style="color:#C9D1D9;">(user);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//创建BCryptPasswordEncoder注入容器</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> PasswordEncoder </span><span style="color:#D2A8FF;">passwordEncoder</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">BCryptPasswordEncoder</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> AuthenticationManager </span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">super</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//关闭csrf</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">csrf</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">disable</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//不通过Session获取SecurityContext</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">sessionManagement</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">sessionCreationPolicy</span><span style="color:#C9D1D9;">(SessionCreationPolicy.STATELESS)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">and</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 对于登录接口 允许匿名访问</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">antMatchers</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/login&quot;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">anonymous</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 除上面外的所有请求全部需要鉴权认证</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Service</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">LoginServiceImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LoginService</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationManager</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationManager;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> RedisCache</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">redisCache;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> ResponseResult </span><span style="color:#D2A8FF;">login</span><span style="color:#C9D1D9;">(User </span><span style="color:#FFA657;">user</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//获取AuthenticationManager  authenticate进行用户认证</span></span>
<span class="line"><span style="color:#C9D1D9;">        UsernamePasswordAuthenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">UsernamePasswordAuthenticationToken</span><span style="color:#C9D1D9;">(user.</span><span style="color:#D2A8FF;">getUserName</span><span style="color:#C9D1D9;">(),user.</span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        Authentication</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticate</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> authenticationManager.</span><span style="color:#D2A8FF;">authenticate</span><span style="color:#C9D1D9;">(authenticationToken);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果认证没通过，给出对应的提示</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(authenticate)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;登录失败&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#8B949E;">//        如果认证通过了，使用userid生成jwt</span></span>
<span class="line"><span style="color:#C9D1D9;">        LoginUser</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">principal</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (LoginUser) authenticate.</span><span style="color:#D2A8FF;">getPrincipal</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userid</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> principal.</span><span style="color:#D2A8FF;">getUser</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">getId</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">toString</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">jwt</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> JwtUtil.</span><span style="color:#D2A8FF;">createJWT</span><span style="color:#C9D1D9;">(userid);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        Map</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">,</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">map</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        map.</span><span style="color:#D2A8FF;">put</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;token&quot;</span><span style="color:#C9D1D9;">,jwt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">//        把完整的用户信息存入redis  userid作为key</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisCache.</span><span style="color:#D2A8FF;">setCacheObject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;login:&quot;</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">userid,principal);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;登录成功&quot;</span><span style="color:#C9D1D9;">,map);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h5 id="_2-3-3-4-认证过滤器" tabindex="-1">2.3.3.4 认证过滤器 <a class="header-anchor" href="#_2-3-3-4-认证过滤器" aria-hidden="true">#</a></h5><p>​ 我们需要自定义一个过滤器，这个过滤器会去获取请求头中的 token，对 token 进行解析取出其中的 userid。</p><p>​ 使用 userid 去 redis 中获取对应的 LoginUser 对象。</p><p>​ 然后封装 Authentication 对象存入 SecurityContextHolder</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JwtAuthenticationTokenFilter</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">OncePerRequestFilter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> RedisCache</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">redisCache;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">doFilterInternal</span><span style="color:#C9D1D9;">(HttpServletRequest </span><span style="color:#FFA657;">httpServletRequest</span><span style="color:#C9D1D9;">, HttpServletResponse </span><span style="color:#FFA657;">httpServletResponse</span><span style="color:#C9D1D9;">, FilterChain </span><span style="color:#FFA657;">filterChain</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//获取token</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">token</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> httpServletRequest.</span><span style="color:#D2A8FF;">getHeader</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;token&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果token是空的，直接放行，然后return，当过滤器链执行完之后，回来的时候不让它继续往下执行，直接return掉</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">!</span><span style="color:#C9D1D9;">StringUtils.</span><span style="color:#D2A8FF;">hasText</span><span style="color:#C9D1D9;">(token)) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#8B949E;">//放行</span></span>
<span class="line"><span style="color:#C9D1D9;">            filterChain.</span><span style="color:#D2A8FF;">doFilter</span><span style="color:#C9D1D9;">(httpServletRequest, httpServletResponse);</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//解析touken</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userid;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">try</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">            Claims</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">claims</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> JwtUtil.</span><span style="color:#D2A8FF;">parseJWT</span><span style="color:#C9D1D9;">(token);</span></span>
<span class="line"><span style="color:#C9D1D9;">            userid </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> claims.</span><span style="color:#D2A8FF;">getSubject</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        } </span><span style="color:#FF7B72;">catch</span><span style="color:#C9D1D9;"> (Exception </span><span style="color:#FFA657;">e</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            e.</span><span style="color:#D2A8FF;">printStackTrace</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;token非法&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//从redis获取用户信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">redisKey</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;login:&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> userid;</span></span>
<span class="line"><span style="color:#C9D1D9;">        LoginUser</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">loginUser</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> redisCache.</span><span style="color:#D2A8FF;">getCacheObject</span><span style="color:#C9D1D9;">(redisKey);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(loginUser)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;用户未登录&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//存入SecurityContextHolder</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//todo 获取权限信息封装到Authentication</span></span>
<span class="line"><span style="color:#C9D1D9;">        UsernamePasswordAuthenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">UsernamePasswordAuthenticationToken</span><span style="color:#C9D1D9;">(loginUser,</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        SecurityContextHolder.</span><span style="color:#D2A8FF;">getContext</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">setAuthentication</span><span style="color:#C9D1D9;">(authenticationToken);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//放行</span></span>
<span class="line"><span style="color:#C9D1D9;">        filterChain.</span><span style="color:#D2A8FF;">doFilter</span><span style="color:#C9D1D9;">(httpServletRequest,httpServletResponse);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//创建BCryptPasswordEncoder注入容器</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> PasswordEncoder </span><span style="color:#D2A8FF;">passwordEncoder</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">BCryptPasswordEncoder</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> AuthenticationManager </span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">super</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> JwtAuthenticationTokenFilter</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">jwtAuthenticationTokenFilter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//关闭csrf</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">csrf</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">disable</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//不通过Session获取SecurityContext</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">sessionManagement</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">sessionCreationPolicy</span><span style="color:#C9D1D9;">(SessionCreationPolicy.STATELESS)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">and</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 对于登录接口 允许匿名访问</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">antMatchers</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/login&quot;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">anonymous</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 除上面外的所有请求全部需要鉴权认证</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把token校验过滤器添加到过滤器链中</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">addFilterBefore</span><span style="color:#C9D1D9;">(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h5 id="_2-3-3-5-退出登录" tabindex="-1">2.3.3.5 退出登录 <a class="header-anchor" href="#_2-3-3-5-退出登录" aria-hidden="true">#</a></h5><p>​ 我们只需要一个登录接口，然后获取 SecurityContextHolder 中的认证信息，删除 redis 中对应的数据即可。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">RequestMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/logout&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> ResponseResult </span><span style="color:#D2A8FF;">logout</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> loginService.</span><span style="color:#D2A8FF;">logout</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Service</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">LoginServiceImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LoginService</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationManager</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationManager;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> RedisCache</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">redisCache;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> ResponseResult </span><span style="color:#D2A8FF;">login</span><span style="color:#C9D1D9;">(User </span><span style="color:#FFA657;">user</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//获取AuthenticationManager  authenticate进行用户认证</span></span>
<span class="line"><span style="color:#C9D1D9;">        UsernamePasswordAuthenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">UsernamePasswordAuthenticationToken</span><span style="color:#C9D1D9;">(user.</span><span style="color:#D2A8FF;">getUserName</span><span style="color:#C9D1D9;">(),user.</span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        Authentication</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticate</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> authenticationManager.</span><span style="color:#D2A8FF;">authenticate</span><span style="color:#C9D1D9;">(authenticationToken);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果认证没通过，给出对应的提示</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(authenticate)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;登录失败&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#8B949E;">//        如果认证通过了，使用userid生成jwt</span></span>
<span class="line"><span style="color:#C9D1D9;">        LoginUser</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">principal</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (LoginUser) authenticate.</span><span style="color:#D2A8FF;">getPrincipal</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userid</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> principal.</span><span style="color:#D2A8FF;">getUser</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">getId</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">toString</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">jwt</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> JwtUtil.</span><span style="color:#D2A8FF;">createJWT</span><span style="color:#C9D1D9;">(userid);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        Map</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">,</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">map</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        map.</span><span style="color:#D2A8FF;">put</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;token&quot;</span><span style="color:#C9D1D9;">,jwt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">//        把完整的用户信息存入redis  userid作为key</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisCache.</span><span style="color:#D2A8FF;">setCacheObject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;login:&quot;</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">userid,principal);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;登录成功&quot;</span><span style="color:#C9D1D9;">,map);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//注销用户</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> ResponseResult </span><span style="color:#D2A8FF;">logout</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//获取SecurityContextHolder中的用户信息（id）</span></span>
<span class="line"><span style="color:#C9D1D9;">        UsernamePasswordAuthenticationToken</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authentication</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (UsernamePasswordAuthenticationToken) SecurityContextHolder.</span><span style="color:#D2A8FF;">getContext</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">getAuthentication</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        LoginUser</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">loginUser</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (LoginUser) authentication.</span><span style="color:#D2A8FF;">getPrincipal</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userid</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> loginUser.</span><span style="color:#D2A8FF;">getUser</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">getId</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//删除redis中的值</span></span>
<span class="line"><span style="color:#C9D1D9;">        redisCache.</span><span style="color:#D2A8FF;">deleteObject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;login:&quot;</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">userid);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;注销成功&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="_3-授权" tabindex="-1">3.授权 <a class="header-anchor" href="#_3-授权" aria-hidden="true">#</a></h2><h3 id="_3-0-权限系统的使用" tabindex="-1">3.0 权限系统的使用 <a class="header-anchor" href="#_3-0-权限系统的使用" aria-hidden="true">#</a></h3><p>​ 例如一个学校图书馆的管理系统，如果是普通学生登录就能看到借书还书相关的功能，不可能让他看到并且去使用添加书籍信息，删除书籍信息等功能。但是如果是一个图书馆管理员的账号登录了，应该就能看到并使用添加书籍信息，删除书籍信息等功能。</p><p>​ 总结起来就是<strong>不同的用户可以使用不同的功能</strong>。这就是权限系统要去实现的效果。</p><p>​ 我们不能只依赖前端去判断用户的权限来选择显示哪些菜单哪些按钮。因为如果只是这样，如果有人知道了对应功能的接口地址就可以不通过前端，直接去发送请求来实现相关功能操作。</p><p>​ 所以我们还需要在后台进行用户权限的判断，判断当前用户是否有相应的权限，必须具有所需权限才能进行相应的操作。</p><h3 id="_3-1-授权基本流程" tabindex="-1">3.1 授权基本流程 <a class="header-anchor" href="#_3-1-授权基本流程" aria-hidden="true">#</a></h3><p>​ 在 SpringSecurity 中，会使用默认的 FilterSecurityInterceptor 来进行权限校验。在 FilterSecurityInterceptor 中会从 SecurityContextHolder 获取其中的 Authentication，然后获取其中的权限信息。当前用户是否拥有访问当前资源路径所需的权限。</p><p>​ 所以我们在项目中只需要把当前登录用户的权限信息也存入 Authentication。</p><p>​ 然后设置我们的资源所需要的的权限即可。</p><h3 id="_3-2-授权实现" tabindex="-1">3.2 授权实现 <a class="header-anchor" href="#_3-2-授权实现" aria-hidden="true">#</a></h3><h4 id="_3-2-1-限制访问资源所需权限" tabindex="-1">3.2.1 限制访问资源所需权限 <a class="header-anchor" href="#_3-2-1-限制访问资源所需权限" aria-hidden="true">#</a></h4><p>​ SpringSecurity 为我们提供了基于注解的权限控制方案，这也是我们项目中主要采用的方式。我们可以使用注解去指定访问对应的资源所需的权限。</p><p>​ 但是要使用它我们需要先开启相关配置。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">EnableGlobalMethodSecurity</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">prePostEnabled</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然后就可以使用对应的注解。@PreAuthorize</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">RestController</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">HelloController</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">RequestMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/hello&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PreAuthorize</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;hasAuthority(&#39;test&#39;)&quot;</span><span style="color:#C9D1D9;">)</span><span style="color:#8B949E;">//设置访问权限</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_3-2-2-封装权限信息" tabindex="-1">3.2.2 封装权限信息 <a class="header-anchor" href="#_3-2-2-封装权限信息" aria-hidden="true">#</a></h4><p>​ 我们前面在写 UserDetailsServiceImpl 的时候说过，在查询出用户后还要获取对应的权限信息，封装到 UserDetails 中返回。</p><p>​ 我们先直接把权限写死，封装到 UserDetails 中进行测试。</p><p>​ 我们之前定义了 UserDetails 的实现类 LoginUser，想要让其能封装权限信息就要对其进行修改。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">package</span><span style="color:#C9D1D9;"> com.dunxi.domain;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.alibaba.fastjson.annotation.JSONField;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.AllArgsConstructor;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.Data;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.NoArgsConstructor;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.security.core.GrantedAuthority;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.security.core.authority.SimpleGrantedAuthority;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> org.springframework.security.core.userdetails.UserDetails;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.ArrayList;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.Collection;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.List;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.stream.Collectors;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Data</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">LoginUser</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">UserDetails</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> User</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">user;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">permissions;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">LoginUser</span><span style="color:#C9D1D9;">(User </span><span style="color:#FFA657;">user</span><span style="color:#C9D1D9;">, List&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FFA657;">permissions</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.user </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> user;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">.permissions </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> permissions;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//设置成false这个成员变量就不会被序列化到redis中</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">JSONField</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">serialize</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">)</span><span style="color:#8B949E;">//不加他的话运行的时候会出现异常</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">SimpleGrantedAuthority</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">authorities;</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> Collection&lt;</span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">GrantedAuthority</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">getAuthorities</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (authorities </span><span style="color:#FF7B72;">!=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> authorities;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把permissions中String类型的权限信息封装成SimpleGrantedAuthority对象</span></span>
<span class="line"><span style="color:#8B949E;">//        List&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#8B949E;">//        for (String permission : permissions) {</span></span>
<span class="line"><span style="color:#8B949E;">//            SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permission);</span></span>
<span class="line"><span style="color:#8B949E;">//            authorities.add(authority);</span></span>
<span class="line"><span style="color:#8B949E;">//        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        authorities </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> permissions.</span><span style="color:#D2A8FF;">stream</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">map</span><span style="color:#C9D1D9;">(SimpleGrantedAuthority</span><span style="color:#FF7B72;">::new</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">collect</span><span style="color:#C9D1D9;">(Collectors.</span><span style="color:#D2A8FF;">toList</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> authorities;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> user.</span><span style="color:#D2A8FF;">getPassword</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">getUsername</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> user.</span><span style="color:#D2A8FF;">getUserName</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isAccountNonExpired</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isAccountNonLocked</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isCredentialsNonExpired</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">isEnabled</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div><p>​ LoginUser 修改完后我们就可以在 UserDetailsServiceImpl 中去把权限信息封装到 LoginUser 中了。我们写死权限信息进行测试，后面我们再从数据库中查询权限信息。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Service</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">UserDetailsServiceImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">UserDetailsService</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> UserMapper</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userMapper;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> UserDetails </span><span style="color:#D2A8FF;">loadUserByUsername</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">username</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> UsernameNotFoundException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//查询用户信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        LambdaQueryWrapper</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">User</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">queryWrapper</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> LambdaQueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        queryWrapper.</span><span style="color:#D2A8FF;">eq</span><span style="color:#C9D1D9;">(User</span><span style="color:#FF7B72;">::</span><span style="color:#C9D1D9;">getUserName,username);</span></span>
<span class="line"><span style="color:#C9D1D9;">        User</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">user</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> userMapper.</span><span style="color:#D2A8FF;">selectOne</span><span style="color:#C9D1D9;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果没有查询到用户，就抛出异常</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(user)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;用户名或密码错误。&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//Todo  查询对应的权限信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">list</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> ArrayList&lt;&gt;(Arrays.</span><span style="color:#D2A8FF;">asList</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;test&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;admin&quot;</span><span style="color:#C9D1D9;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把数据封装成UserDetails返回</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">LoginUser</span><span style="color:#C9D1D9;">(user,list);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h4 id="_3-2-3-从数据库查询权限信息" tabindex="-1">3.2.3 从数据库查询权限信息 <a class="header-anchor" href="#_3-2-3-从数据库查询权限信息" aria-hidden="true">#</a></h4><h5 id="_3-2-3-1-rbac-权限模型" tabindex="-1">3.2.3.1 RBAC 权限模型 <a class="header-anchor" href="#_3-2-3-1-rbac-权限模型" aria-hidden="true">#</a></h5><p>​ RBAC 权限模型（Role-Based Access Control）即：基于角色的权限控制。这是目前最常被开发者使用也是最易使用、通用的权限模型。</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20220709172524739.png" alt=""></p><h5 id="_3-2-3-2-准备工作" tabindex="-1">3.2.3.2 准备工作 <a class="header-anchor" href="#_3-2-3-2-准备工作" aria-hidden="true">#</a></h5><div class="language-sql line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark"><code><span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DATABASE</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;">/*!32312 IF NOT EXISTS*/</span><span style="color:#A5D6FF;">\`security_2\`</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">USE</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`security_2\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/*Table structure for table \`sys_menu\` */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">DROP</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">IF</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">EXISTS</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`sys_menu\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_menu</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`menu_name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;菜单名&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`path\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;路由地址&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`component\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;组件路径&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`visible\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;菜单状态（0显示 1隐藏）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;菜单状态（0正常 1停用）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`perms\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;权限标识&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`icon\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;#&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;菜单图标&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`del_flag\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">11</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;是否删除（0未删除 1已删除）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`remark\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">500</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;备注&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">InnoDB AUTO_INCREMENT</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4 COMMENT</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&#39;菜单表&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/*Table structure for table \`sys_role\` */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">DROP</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">IF</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">EXISTS</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`sys_role\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_role</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">128</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`role_key\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;角色权限字符串&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;角色状态（0正常 1停用）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`del_flag\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;del_flag&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`remark\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">500</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;备注&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">InnoDB AUTO_INCREMENT</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4 COMMENT</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&#39;角色表&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/*Table structure for table \`sys_role_menu\` */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">DROP</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">IF</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">EXISTS</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`sys_role_menu\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_role_menu</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`role_id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT COMMENT </span><span style="color:#A5D6FF;">&#39;角色ID&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`menu_id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;菜单id&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`role_id\`</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">\`menu_id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">InnoDB AUTO_INCREMENT</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/*Table structure for table \`sys_user\` */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">DROP</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">IF</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">EXISTS</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`sys_user\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_user</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT COMMENT </span><span style="color:#A5D6FF;">&#39;主键&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`user_name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户名&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`nick_name\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;昵称&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`password\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;NULL&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;密码&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;账号状态（0正常 1停用）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`email\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;邮箱&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`phonenumber\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">32</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;手机号&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`sex\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户性别（0男，1女，2未知）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`avatar\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">varchar</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">128</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;头像&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`user_type\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">char</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;1&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;用户类型（0管理员，1普通用户）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;创建人的用户id&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`create_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;创建时间&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_by\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">20</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;更新人&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`update_time\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">datetime</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">NULL</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;更新时间&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`del_flag\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">11</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;删除标志（0代表未删除，1代表已删除）&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">InnoDB AUTO_INCREMENT</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4 COMMENT</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&#39;用户表&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/*Table structure for table \`sys_user_role\` */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">DROP</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">IF</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">EXISTS</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`sys_user_role\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">CREATE</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">TABLE</span><span style="color:#C9D1D9;"> \`</span><span style="color:#D2A8FF;">sys_user_role</span><span style="color:#C9D1D9;">\` (</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`user_id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> AUTO_INCREMENT COMMENT </span><span style="color:#A5D6FF;">&#39;用户id&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#A5D6FF;">\`role_id\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bigint</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">NOT NULL</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0&#39;</span><span style="color:#C9D1D9;"> COMMENT </span><span style="color:#A5D6FF;">&#39;角色id&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">PRIMARY KEY</span><span style="color:#C9D1D9;"> (</span><span style="color:#A5D6FF;">\`user_id\`</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">\`role_id\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">) ENGINE</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">InnoDB </span><span style="color:#FF7B72;">DEFAULT</span><span style="color:#C9D1D9;"> CHARSET</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">utf8mb4;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br></div></div><div class="language-sql line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">select</span></span>
<span class="line"><span style="color:#C9D1D9;">	</span><span style="color:#FF7B72;">distinct</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">m</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">perms</span></span>
<span class="line"><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">FROM</span></span>
<span class="line"><span style="color:#C9D1D9;">sys_user_role ur </span><span style="color:#FF7B72;">left join</span><span style="color:#C9D1D9;"> sys_role r </span><span style="color:#FF7B72;">on</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">ur</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">role_id</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">r</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">id</span></span>
<span class="line"><span style="color:#FF7B72;">left join</span><span style="color:#C9D1D9;"> sys_role_menu rm </span><span style="color:#FF7B72;">on</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">ur</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">role_id</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">rm</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">role_id</span></span>
<span class="line"><span style="color:#FF7B72;">left join</span><span style="color:#C9D1D9;"> sys_menu m </span><span style="color:#FF7B72;">on</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">m</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">rm</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">menu_id</span></span>
<span class="line"><span style="color:#FF7B72;">where</span></span>
<span class="line"><span style="color:#C9D1D9;">user_id </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span></span>
<span class="line"><span style="color:#C9D1D9;">	</span><span style="color:#FF7B72;">and</span><span style="color:#C9D1D9;"> r.</span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">and</span><span style="color:#C9D1D9;"> m.</span><span style="color:#A5D6FF;">\`status\`</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">package</span><span style="color:#C9D1D9;"> com.dunxi.domain;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.baomidou.mybatisplus.annotation.TableId;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.baomidou.mybatisplus.annotation.TableName;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.fasterxml.jackson.annotation.JsonInclude;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.AllArgsConstructor;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.Data;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> lombok.NoArgsConstructor;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.io.Serializable;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.Date;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * 菜单表(Menu)实体类</span></span>
<span class="line"><span style="color:#8B949E;"> *</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@author</span><span style="color:#8B949E;"> makejava</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@since</span><span style="color:#8B949E;"> 2022-07-10 21:30:08</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">TableName</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;sys_menu&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Data</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">JsonInclude</span><span style="color:#C9D1D9;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Menu</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Serializable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">final</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">serialVersionUID</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">54979041104113736L</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        @</span><span style="color:#FF7B72;">TableId</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">id;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 菜单名</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">menuName;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 路由地址</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">path;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 组件路径</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">component;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 菜单状态（0显示 1隐藏）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">visible;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 菜单状态（0正常 1停用）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">status;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 权限标识</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">perms;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 菜单图标</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">icon;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">createBy;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">createTime;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Long</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">updateBy;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Date</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">updateTime;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 是否删除（0未删除 1已删除）</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> Integer</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">delFlag;</span></span>
<span class="line"><span style="color:#8B949E;">    /**</span></span>
<span class="line"><span style="color:#8B949E;">    * 备注</span></span>
<span class="line"><span style="color:#8B949E;">    */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">remark;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><h5 id="_3-2-3-3-代码实现" tabindex="-1">3.2.3.3 代码实现 <a class="header-anchor" href="#_3-2-3-3-代码实现" aria-hidden="true">#</a></h5><p>​ 我们只需要根据用户 id 去查询到其所对应的权限信息即可。</p><p>​ 所以我们可以先定义个 mapper，其中提供一个方法可以根据 userid 查询权限信息。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> com.dunxi.domain.Menu;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> java.util.List;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">interface</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">MenuMapper</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">BaseMapper</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FF7B72;">Menu</span><span style="color:#C9D1D9;">&gt; {</span></span>
<span class="line"><span style="color:#C9D1D9;">    List&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#D2A8FF;">selectPermsByUserId</span><span style="color:#C9D1D9;">(Long </span><span style="color:#FFA657;">id</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>​ 尤其是自定义方法，所需要创建对应的 mapper 文件，定义对应的 sql 语句</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;?</span><span style="color:#7EE787;">xml</span><span style="color:#79C0FF;"> version</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;1.0&quot;</span><span style="color:#79C0FF;"> encoding</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;UTF-8&quot;</span><span style="color:#C9D1D9;"> ?&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;!</span><span style="color:#FF7B72;">DOCTYPE</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">mapper</span><span style="color:#C9D1D9;"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">mapper</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">namespace</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;com.dunxi.mapper.MenuMapper&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">select</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;selectPermsByUserId&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">resultType</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;java.lang.String&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        select</span></span>
<span class="line"><span style="color:#C9D1D9;">         distinct m.perms</span></span>
<span class="line"><span style="color:#C9D1D9;">        FROM</span></span>
<span class="line"><span style="color:#C9D1D9;">          sys_user_role ur left join sys_role r on ur.role_id = r.id</span></span>
<span class="line"><span style="color:#C9D1D9;">          left join sys_role_menu rm on ur.role_id = rm.role_id</span></span>
<span class="line"><span style="color:#C9D1D9;">          left join sys_menu m on m.id = rm.menu_id</span></span>
<span class="line"><span style="color:#C9D1D9;">        where</span></span>
<span class="line"><span style="color:#C9D1D9;">          user_id = 2</span></span>
<span class="line"><span style="color:#C9D1D9;">         and r.\`status\` = 0 and m.\`status\` = 0;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">select</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">mapper</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>​ 配置 yml 文件</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#7EE787;">spring</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">datasource</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">url</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">jdbc:mysql://localhost:3306/dx_security?characterEncoding=utf-8&amp;serverTimezone=UTC</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">username</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">root</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">password</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">123456</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">driver-class-name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">redis</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">host</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">localhost</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">port</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">6379</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">mybatis-plus</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">mapper-locations</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">classpath*:/mapper/**/*.xml</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>​ 然后我们可以在 UserDetailsServiceImpl 中去调用该 mapper 的方法查询权限信息封装到 LoginUser 对象中即可。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Service</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">UserDetailsServiceImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">UserDetailsService</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> UserMapper</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">userMapper;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> MenuMapper</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">menuMapper;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> UserDetails </span><span style="color:#D2A8FF;">loadUserByUsername</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">username</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> UsernameNotFoundException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//查询用户信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        LambdaQueryWrapper</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">User</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">queryWrapper</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> LambdaQueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#C9D1D9;">        queryWrapper.</span><span style="color:#D2A8FF;">eq</span><span style="color:#C9D1D9;">(User</span><span style="color:#FF7B72;">::</span><span style="color:#C9D1D9;">getUserName,username);</span></span>
<span class="line"><span style="color:#C9D1D9;">        User</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">user</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> userMapper.</span><span style="color:#D2A8FF;">selectOne</span><span style="color:#C9D1D9;">(queryWrapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//如果没有查询到用户，就抛出异常</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(Objects.</span><span style="color:#D2A8FF;">isNull</span><span style="color:#C9D1D9;">(user)){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">RuntimeException</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;用户名或密码错误。&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//Todo  查询对应的权限信息</span></span>
<span class="line"><span style="color:#C9D1D9;">        List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">permissionKeyList</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> menuMapper.</span><span style="color:#D2A8FF;">selectPermsByUserId</span><span style="color:#C9D1D9;">(user.</span><span style="color:#D2A8FF;">getId</span><span style="color:#C9D1D9;">());</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把数据封装成UserDetails返回</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">LoginUser</span><span style="color:#C9D1D9;">(user,permissionKeyList);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="_4-自定义失败处理" tabindex="-1">4. 自定义失败处理 <a class="header-anchor" href="#_4-自定义失败处理" aria-hidden="true">#</a></h2><p>​ 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的 json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道 SpringSecurity 的异常处理机制。</p><p>​ 在 SpringSecurity 中，如果我们在认证或者授权的过程中出现了异常会被 ExceptionTranslationFilter 捕获到。在 ExceptionTranslationFilter 中会去判断是认证失败还是授权失败出现的异常。</p><p>​ 如果是认证过程中出现的异常会被封装成 AuthenticationException 然后调用 AuthenticationEntryPoint 对象的方法去进行异常处理。</p><p>​ 如果是授权过程中出现的异常会被封装成 AccessDeniedException 然后调用<strong>AccessDeniedHandler</strong>对象的方法去进行异常处理。</p><p>​ 所以如果我们需要自定义异常处理，我们只需要自定义 AuthenticationEntryPoint 和 AccessDeniedHandler 然后配置给 SpringSecurity 即可。</p><p>① 自定义实现类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">AuthenticationEntryPointImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">AuthenticationEntryPoint</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">commence</span><span style="color:#C9D1D9;">(HttpServletRequest </span><span style="color:#FFA657;">httpServletRequest</span><span style="color:#C9D1D9;">, HttpServletResponse </span><span style="color:#FFA657;">httpServletResponse</span><span style="color:#C9D1D9;">, AuthenticationException </span><span style="color:#FFA657;">e</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> IOException, ServletException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        ResponseResult</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">result</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(HttpStatus.UNAUTHORIZED.</span><span style="color:#D2A8FF;">value</span><span style="color:#C9D1D9;">(),</span><span style="color:#A5D6FF;">&quot;用户认证失败，请重新登录！&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">json</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> JSON.</span><span style="color:#D2A8FF;">toJSONString</span><span style="color:#C9D1D9;">(result);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//处理异常</span></span>
<span class="line"><span style="color:#C9D1D9;">        WebUtils.</span><span style="color:#D2A8FF;">renderString</span><span style="color:#C9D1D9;">(httpServletResponse,json);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">AccessDeniedHandlerImpl</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">AccessDeniedHandler</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">handle</span><span style="color:#C9D1D9;">(HttpServletRequest </span><span style="color:#FFA657;">httpServletRequest</span><span style="color:#C9D1D9;">, HttpServletResponse </span><span style="color:#FFA657;">httpServletResponse</span><span style="color:#C9D1D9;">, AccessDeniedException </span><span style="color:#FFA657;">e</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> IOException, ServletException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        ResponseResult</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">result</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ResponseResult</span><span style="color:#C9D1D9;">(HttpStatus.FORBIDDEN.</span><span style="color:#D2A8FF;">value</span><span style="color:#C9D1D9;">(),</span><span style="color:#A5D6FF;">&quot;您的权限不足！！&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">        String</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">json</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> JSON.</span><span style="color:#D2A8FF;">toJSONString</span><span style="color:#C9D1D9;">(result);</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//处理异常</span></span>
<span class="line"><span style="color:#C9D1D9;">        WebUtils.</span><span style="color:#D2A8FF;">renderString</span><span style="color:#C9D1D9;">(httpServletResponse,json);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>② 配置给 SpringSecurity</p><p>​ 先注入对应的处理器</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationEntryPoint</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationEntryPoint;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AccessDeniedHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">accessDeniedHandler;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>​ 然后我们可以使用 HTTPSecurity 对象的方法去配置。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">//配置异常处理器</span></span>
<span class="line"><span style="color:#C9D1D9;">http.</span><span style="color:#D2A8FF;">exceptionHandling</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticationEntryPoint</span><span style="color:#C9D1D9;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#C9D1D9;">        .</span><span style="color:#D2A8FF;">accessDeniedHandler</span><span style="color:#C9D1D9;">(accessDeniedHandler);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_5-跨域" tabindex="-1">5.跨域 <a class="header-anchor" href="#_5-跨域" aria-hidden="true">#</a></h2><p>​ 浏览器出于安全考虑，使用 XMLHTTPRequest 对象发起 HTTP 请求时必须遵守同源策略，否则就是跨域的 HTTP 请求，默认情况下是被禁止的。同源策略相同才能正常通信，即协议，域名，端口号，完全一致。</p><p>​ 前后端分离项目，前端项目和后端项目一般都不是同源的，所以肯定会存在跨域问题。</p><p>​ 所以我们要处理一下，让前端能进行跨域请求。</p><p>① 先对 SpringBoot 配置，允许跨域请求。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">//加上@Configuration注解，表示这是一个配置类</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">CorsConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebMvcConfigurer</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">addCorsMappings</span><span style="color:#C9D1D9;">(CorsRegistry </span><span style="color:#FFA657;">registry</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//设置允许跨域的路径</span></span>
<span class="line"><span style="color:#C9D1D9;">        registry.</span><span style="color:#D2A8FF;">addMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/**&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//设置允许跨域请求的域名</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">allowedOriginPatterns</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;*&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//是否允许cookie</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">allowCredentials</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//设置允许跨域请求的方式</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">allowedMethods</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;GET&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;POST&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;DELETE&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;PUT&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//设置允许的Handler属性</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">allowedHeaders</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;*&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//跨域允许时间</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">maxAge</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">3600</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>② 开启 SpringSecurity 的跨域访问</p><p>​ 由于我们的资源都会受到 SpringSecurity 的保护，所以想要跨域访问还要让 SpringSecurity 运行跨域访问。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">EnableGlobalMethodSecurity</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">prePostEnabled</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//创建BCryptPasswordEncoder注入容器</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> PasswordEncoder </span><span style="color:#D2A8FF;">passwordEncoder</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">BCryptPasswordEncoder</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> AuthenticationManager </span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">super</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> JwtAuthenticationTokenFilter</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">jwtAuthenticationTokenFilter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationEntryPoint</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationEntryPoint;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AccessDeniedHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">accessDeniedHandler;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//关闭csrf</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">csrf</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">disable</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//不通过Session获取SecurityContext</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">sessionManagement</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">sessionCreationPolicy</span><span style="color:#C9D1D9;">(SessionCreationPolicy.STATELESS)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">and</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 对于登录接口 允许匿名访问</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">antMatchers</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/login&quot;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">anonymous</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 除上面外的所有请求全部需要鉴权认证</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把token校验过滤器添加到过滤器链中</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">addFilterBefore</span><span style="color:#C9D1D9;">(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//配置异常处理器</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">exceptionHandling</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticationEntryPoint</span><span style="color:#C9D1D9;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">accessDeniedHandler</span><span style="color:#C9D1D9;">(accessDeniedHandler);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//允许跨域</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">cors</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="_6-遗留小问题" tabindex="-1">6. 遗留小问题 <a class="header-anchor" href="#_6-遗留小问题" aria-hidden="true">#</a></h2><h3 id="其它权限校验方法" tabindex="-1">其它权限校验方法 <a class="header-anchor" href="#其它权限校验方法" aria-hidden="true">#</a></h3><p>​ 我们前面都是使用@PreAuthorize 注解，然后再其中使用的是 hasAuthority 方法进行校验。SpringSecurity 还为我们提供了其他方法。例如：hasAnyAuthority，hasRole，hasAnyRole 等。</p><p>​ 这里我们先不急着去介绍这些方法，我们先去理解 hasAuthority 的原理，然后再去学习其他方法你就更容易理解，而不是死记硬背区别。并且我们也可以选择定义校验方法，实现我们自己的校验逻辑。</p><p>​ hasAuthority 方法实际是执行到了 SecurityExpressionRoot 的 hasAuthority，大家只要断点调试既可知道它内部的校验原理。</p><p>​ 它内部其实是调用 authentication 的 getAuthorities 方法获取用户的权限列表，然后去判断我们存入的方法参数数据在没在权限列表中。</p><p>​ hasAnyAuthority 方法可以传入多个权限，只要用户有其中一条，就可以访问对应的资源。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PreAuthorize</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;hasAnyAuthority(&#39;admin&#39;,&#39;test&#39;,&#39;system:dept:list&#39;)&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ hasRole 要求有对应的角色才可以访问，但是它内部会把我们传入的参数拼接上 <strong>ROLE_</strong> 后再去比较。所以这种情况下要用用户对应的权限也要有 <strong>ROLE_</strong> 这个前缀才可以。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PreAuthorize</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;hasRole(&#39;system:dept:list&#39;)&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ hasAnyRole 有任意的角色就可以访问。它内部也会把我们传入的参数拼接上 <strong>ROLE_</strong> 后再去比较。所以这种情况下要用用户对应的权限也要有 <strong>ROLE_</strong> 这个前缀才可以。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PreAuthorize</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;hasAnyRole(&#39;admin&#39;,&#39;system:dept:list&#39;)&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="自定义权限校验方法" tabindex="-1">自定义权限校验方法 <a class="header-anchor" href="#自定义权限校验方法" aria-hidden="true">#</a></h3><p>​ 我们也可以定义自己的权限校验方法，在@PreAuthorize 注解中使用我们的方法。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;ex&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">DXExpressionRoot</span><span style="color:#C9D1D9;">  {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">boolean</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">hasAuthority</span><span style="color:#C9D1D9;">(String </span><span style="color:#FFA657;">authority</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//获取当前用户的权限</span></span>
<span class="line"><span style="color:#C9D1D9;">        Authentication</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authentication</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> SecurityContextHolder.</span><span style="color:#D2A8FF;">getContext</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">getAuthentication</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        LoginUser</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">loginUser</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (LoginUser) authentication.</span><span style="color:#D2A8FF;">getPrincipal</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        List</span><span style="color:#FFA657;">&lt;</span><span style="color:#FF7B72;">String</span><span style="color:#FFA657;">&gt; </span><span style="color:#C9D1D9;">permissions</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> loginUser.</span><span style="color:#D2A8FF;">getPermissions</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//判断用户权限集合中是否存在authority</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> permissions.</span><span style="color:#D2A8FF;">contains</span><span style="color:#C9D1D9;">(authority);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>​ 在 SPEL 表达式中使用@ex 相当于获取容器中 bean 的名字为 ex 对象。然后再调用这个对象的 hasAuthority 方法</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">RestController</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">HelloController</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">RequestMapping</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/hello&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">PreAuthorize</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;@ex.hasAuthority(&#39;sys:dept:list&#39;)&quot;</span><span style="color:#C9D1D9;">)</span><span style="color:#8B949E;">//设置访问权限</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> String </span><span style="color:#D2A8FF;">hello</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;hello&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="基于配置权限控制" tabindex="-1">基于配置权限控制 <a class="header-anchor" href="#基于配置权限控制" aria-hidden="true">#</a></h3><p>​ 我们也可以在配置类中使用使用配置的方式对资源进行权限控制。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">EnableGlobalMethodSecurity</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">prePostEnabled</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">//创建BCryptPasswordEncoder注入容器</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> PasswordEncoder </span><span style="color:#D2A8FF;">passwordEncoder</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">BCryptPasswordEncoder</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Bean</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> AuthenticationManager </span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">super</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">authenticationManagerBean</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> JwtAuthenticationTokenFilter</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">jwtAuthenticationTokenFilter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationEntryPoint</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">authenticationEntryPoint;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AccessDeniedHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">accessDeniedHandler;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//关闭csrf</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">csrf</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">disable</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">//不通过Session获取SecurityContext</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">sessionManagement</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">sessionCreationPolicy</span><span style="color:#C9D1D9;">(SessionCreationPolicy.STATELESS)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">and</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 对于登录接口 允许匿名访问</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">antMatchers</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/user/login&quot;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">anonymous</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">antMatchers</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;/testCors&quot;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">hasAnyAuthority</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;sys:dept:list&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#8B949E;">// 除上面外的所有请求全部需要鉴权认证</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//把token校验过滤器添加到过滤器链中</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">addFilterBefore</span><span style="color:#C9D1D9;">(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//配置异常处理器</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">exceptionHandling</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticationEntryPoint</span><span style="color:#C9D1D9;">(authenticationEntryPoint)</span></span>
<span class="line"><span style="color:#C9D1D9;">                .</span><span style="color:#D2A8FF;">accessDeniedHandler</span><span style="color:#C9D1D9;">(accessDeniedHandler);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">//允许跨域</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">cors</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h3 id="csrf" tabindex="-1">CSRF <a class="header-anchor" href="#csrf" aria-hidden="true">#</a></h3><p>​ CSRF 是指跨站请求伪造（Cross-site request forgey），是 web 常见的攻击之一。</p><p>​ <a href="https://blog.csdn.net/freeking101/article/details/86537087" target="_blank" rel="noreferrer">https://blog.csdn.net/freeking101/article/details/86537087</a></p><p>​ SpringSecurity 去防止 CSRF 攻击的方式就是通过 csrf_token。后端会生成一个 csrf_token，前端发起请求的时候需要携带这个 csrf_token,后端会有过滤器进行校验，如果没有携带或者是伪造的就不允许访问。</p><p>​ 我们可以发现 CSRF 攻击依靠的是 cookie 中所携带的认证信息。但是在前后端分离的项目中我们的认证信息其实是 token，而 token 并不是存储中 cookie 中，并且需要前端代码去把 token 设置到请求头中才可以，所以 CSRF 攻击也就不用担心了。</p><h3 id="认证成功处理器" tabindex="-1">认证成功处理器 <a class="header-anchor" href="#认证成功处理器" aria-hidden="true">#</a></h3><p>​ 实际上在 UsernamePasswordAuthenticationFilter 进行登录认证的时候，如果登录成功了是会调用 AuthenticationSuccessHandler 的方法进行性认证成功后处理的。AuthenticationSuccessHandler 就是登陆成功处理器。</p><p>​ 我们也可以自己去定义成功处理器进行成功后的相应处理。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">DXSuccessHandler</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">AuthenticationSuccessHandler</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">onAuthenticationSuccess</span><span style="color:#C9D1D9;">(HttpServletRequest </span><span style="color:#FFA657;">httpServletRequest</span><span style="color:#C9D1D9;">, HttpServletResponse </span><span style="color:#FFA657;">httpServletResponse</span><span style="color:#C9D1D9;">, Authentication </span><span style="color:#FFA657;">authentication</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> IOException, ServletException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        System.out.</span><span style="color:#D2A8FF;">println</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;认证成功了&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>​ 配置 security 文件</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationSuccessHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">successHandler;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">formLogin</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">successHandler</span><span style="color:#C9D1D9;">(successHandler);</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="认证失败处理器" tabindex="-1">认证失败处理器 <a class="header-anchor" href="#认证失败处理器" aria-hidden="true">#</a></h3><p>​ 实际上在 UsernamePasswordAuthenticationFilter 进行登录认证的时候，如果认证失败了是会调用 AuthenticationFailureHandler 的方法进行认证失败后的处理的。AuthenticationFailureHandler 就是登录失败处理器。</p><p>​ 我们也可以自己去自定义失败处理器进行失败后的相应处理。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Component</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">DXFailureHandler</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">implements</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">AuthenticationFailureHandler</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">onAuthenticationFailure</span><span style="color:#C9D1D9;">(HttpServletRequest </span><span style="color:#FFA657;">httpServletRequest</span><span style="color:#C9D1D9;">, HttpServletResponse </span><span style="color:#FFA657;">httpServletResponse</span><span style="color:#C9D1D9;">, AuthenticationException </span><span style="color:#FFA657;">e</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> IOException, ServletException {</span></span>
<span class="line"><span style="color:#C9D1D9;">        System.out.</span><span style="color:#D2A8FF;">println</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;认证失败了&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">@</span><span style="color:#FF7B72;">Configuration</span></span>
<span class="line"><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">SecurityConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">WebSecurityConfigurerAdapter</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationSuccessHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">successHandler;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Autowired</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">private</span><span style="color:#C9D1D9;"> AuthenticationFailureHandler</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">failureHandler;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    @</span><span style="color:#FF7B72;">Override</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">protected</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">configure</span><span style="color:#C9D1D9;">(HttpSecurity </span><span style="color:#FFA657;">http</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">throws</span><span style="color:#C9D1D9;"> Exception {</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">formLogin</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">            .</span><span style="color:#D2A8FF;">successHandler</span><span style="color:#C9D1D9;">(successHandler)</span></span>
<span class="line"><span style="color:#C9D1D9;">            .</span><span style="color:#D2A8FF;">failureHandler</span><span style="color:#C9D1D9;">(failureHandler);</span></span>
<span class="line"><span style="color:#C9D1D9;">        http.</span><span style="color:#D2A8FF;">authorizeRequests</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">anyRequest</span><span style="color:#C9D1D9;">().</span><span style="color:#D2A8FF;">authenticated</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,225),o=[e];function r(c,t,D,y,i,F){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{C as __pageData,u as default};
